# general settings
name: deepBlur_RubikConv
model_type: deepDeblurModel
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    name: GoPro
    type: PairedImageDataset
    dataroot_gt: /motionDeblur/GoPro/train/target
    dataroot_lq: /motionDeblur/GoPro/train/input
    filename_tmpl: '{}'
    io_backend:
      type: disk
      # (for lmdb)
      # type: lmdb

    gt_size: 128
    use_flip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  val:
    name: GoPro
    type: PairedImageDataset
    dataroot_gt: /motionDeblur/GoPro/test/target
    dataroot_lq: /motionDeblur/GoPro/test/input
    io_backend:
      type: disk

# network structures
network_g:
  type: deepDeblur_RubikConv
  rgb_range: 1.0
  n_resblocks: 19
  n_feats: 64
  n_scales: 3
  kernel_size: 5
  shiftPixel: 1
  gc: 8

# path
path:
  pretrain_network_g: 
  strict_load_g: 
  resume_state: ~

# training settings
train:
  ema_decay: 0.0
  optim_g:
    type: Adam

    lr: !!float 1e-5
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [50000, 100000, 150000, 250000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 30000
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 30000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500